{"version":3,"sources":["../../src/controllers/property.js"],"names":["getAllProperties","req","res","properties","user","length","send","SUCCESS","status","ERROR","getPropertyById","property","postProperty","updateProperty","propertySold","deleteProperty"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAGO,IAAMA,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,GAAD,EAAMC,GAAN,EAAc;AAC5C,MAAMC,UAAU,GAAG,8BAAiBF,GAAG,CAACG,IAArB,CAAnB;AAECD,EAAAA,UAAU,CAACE,MAAX,GAAoB,CAArB,GAA0BH,GAAG,CAACI,IAAJ,CAAS,qBAAQ,GAAR,EAAaC,eAAb,EAAsBJ,UAAtB,CAAT,CAA1B,GAAwED,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBF,IAAhB,CAAqB,qBAAQ,GAAR,EAAaG,aAAb,EAAoB,yBAApB,CAArB,CAAxE;AACD,CAJM;;;;AAMA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACT,GAAD,EAAMC,GAAN,EAAc;AAC3C,MAAMS,QAAQ,GAAG,gCAAmBV,GAAG,CAACU,QAAvB,CAAjB;AAEA,SAAOT,GAAG,CAACI,IAAJ,CAAS,qBAAQ,GAAR,EAAaC,eAAb,EAAsBI,QAAtB,CAAT,CAAP;AACD,CAJM;;;;AAMA,IAAMC,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAG,iBAAOX,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACpBS,YAAAA,QADoB,GACT,4BAAaV,GAAb,CADS;AAG1BC,YAAAA,GAAG,CAACI,IAAJ,CAAS,qBAAQ,GAAR,EAAaC,eAAb,EAAsBI,QAAtB,CAAT;;AAH0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAZC,YAAY;AAAA;AAAA;AAAA,GAAlB;;;;AAMA,IAAMC,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAG,kBAAOZ,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACtBS,YAAAA,QADsB,GACX,oCAAqBV,GAAG,CAACU,QAAzB,EAAmCV,GAAnC,CADW;AAG5BC,YAAAA,GAAG,CAACI,IAAJ,CAAS,qBAAQ,GAAR,EAAaC,eAAb,EAAsBI,QAAtB,CAAT;;AAH4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAdE,cAAc;AAAA;AAAA;AAAA,GAApB;;;;AAMA,IAAMC,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAG,kBAAOb,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAC1BD,YAAAA,GAAG,CAACU,QAAJ,CAAaH,MAAb,GAAsB,MAAtB;AAEAN,YAAAA,GAAG,CAACI,IAAJ,CAAS,qBAAQ,GAAR,EAAaC,eAAb,EAAsBN,GAAG,CAACU,QAA1B,CAAT;;AAH0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAZG,YAAY;AAAA;AAAA;AAAA,GAAlB;;;;AAMA,IAAMC,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAG,kBAAOd,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACtBS,YAAAA,QADsB,GACX,oCAAqBV,GAAG,CAACU,QAAzB,CADW;AAG5BT,YAAAA,GAAG,CAACI,IAAJ,CAAS,qBAAQ,GAAR,EAAaC,eAAb,EAAsBI,QAAtB,CAAT;;AAH4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAdI,cAAc;AAAA;AAAA;AAAA,GAApB","sourcesContent":["import _ from 'lodash';\r\nimport { results, SUCCESS, ERROR } from '../helper/result';\r\nimport { saveProperty, updatePropertyHelper, deletePropertyHelper } from '../helper/property';\r\nimport { searchProperties, searchPropertyById } from '../helper/search';\r\n\r\n\r\nexport const getAllProperties = (req, res) => {\r\n  const properties = searchProperties(req.user);\r\n\r\n  (properties.length > 0) ? res.send(results(200, SUCCESS, properties)) : res.status(404).send(results(404, ERROR, 'No properties available'));\r\n};\r\n\r\nexport const getPropertyById = (req, res) => {\r\n  const property = searchPropertyById(req.property);\r\n\r\n  return res.send(results(200, SUCCESS, property));\r\n};\r\n\r\nexport const postProperty = async (req, res) => {\r\n  const property = saveProperty(req);\r\n\r\n  res.send(results(200, SUCCESS, property));\r\n};\r\n\r\nexport const updateProperty = async (req, res) => {\r\n  const property = updatePropertyHelper(req.property, req);\r\n\r\n  res.send(results(200, SUCCESS, property));\r\n};\r\n\r\nexport const propertySold = async (req, res) => {\r\n  req.property.status = 'sold';\r\n\r\n  res.send(results(200, SUCCESS, req.property));\r\n};\r\n\r\nexport const deleteProperty = async (req, res) => {\r\n  const property = deletePropertyHelper(req.property);\r\n\r\n  res.send(results(200, SUCCESS, property));\r\n};\r\n"],"file":"property.js"}