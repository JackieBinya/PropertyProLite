{"version":3,"sources":["../../../src/middleware/user/validate_password.js"],"names":["req","res","next","bcrypt","compare","body","password","user","isValid","status","send","ERROR"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;;;;;;+BAEe,iBAAOA,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACYC,mBAAOC,OAAP,CAAeJ,GAAG,CAACK,IAAJ,CAASC,QAAxB,EAAkCN,GAAG,CAACO,IAAJ,CAASD,QAA3C,CADZ;;AAAA;AACLE,YAAAA,OADK;;AAAA,gBAGNA,OAHM;AAAA;AAAA;AAAA;;AAAA,6CAGUP,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,qBAAQ,GAAR,EAAaC,aAAb,EAAoB,kBAApB,CAArB,CAHV;;AAAA;AAKXT,YAAAA,IAAI;;AALO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import { results, ERROR } from '../../helper/result';\r\nimport bcrypt from 'bcrypt';\r\n\r\nexport default async (req, res, next) => {\r\n    const isValid =  await bcrypt.compare(req.body.password, req.user.password);\r\n    \r\n    if (!isValid) return res.status(400).send(results(400, ERROR, 'Invalid password'));\r\n    \r\n    next();\r\n}"],"file":"validate_password.js"}